@import "../../../assets/mixins";
@media screen and (min-width: 1024px) {
    $size: 8rem;

    :host {
        @include size($size);
    }

    .content,
    img {
        @include size($size);
    }

    .random {
        @include size($size);
        font-size: $size;
        line-height: $size;
    }
}

@media screen and (min-width: 1440px) {
    $size: 8rem;
    :host {
        @include size($size);
    }
    .content,
    img {
        @include size($size);
    }
    .random {
        @include size($size);
        font-size: $size;
        line-height: $size;
    }
}

:host {
    display: block;
    border: 0.4rem transparent inset;
    margin-bottom: 0.3rem;
    cursor: pointer;
    position: relative;
    
    .content {
        display: flex;
        align-items: center;
        justify-content: center;

        .empty-border {
            color: white;
            border: .3rem #cecece dashed;
            font-size: 8rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: sans-serif;
            opacity: .3;
        }
        
        .status, .empty-border {
            position: absolute;    
            left: 0;
            top: 0;
            width: 96%;
            height: 94%;
        }
        
        .status {
            display: flex;
            align-items: center;
            justify-content: center;

            &::after {
                content: '';
                padding: .5rem;
                box-sizing: border-box;
                border-radius: .2rem;
                background-color: #cecece;
                color: #868686;
                display: block;
                font-size: 1.2rem;
            }
            
            &.destroyed {
                background-color: rgba(255,0,0,.4);
                color: white;

                &::after {
                    content: 'DESTROYED'
                }
            }

            &.skipped {
                &::after {
                    content: 'SKIPPED'
                }
            }

            &.defeated {
                &::after {
                    content: 'DEFEATED'
                }
            }
        }

        img {
            object-fit: contain;
    
            & ~ *:not(.status) {
                display: none;
            }

            &.status {
                filter: grayscale(1);
            }
        }
    }


    &.big {
        $w: 10rem;
        $h: 13rem;
        cursor: initial;
        @include dimension($w, $h);

        .content, img, .random {
            @include dimension($w, $h);
        }
    }

    &:not(.big):hover {
        border: 0.4rem #00c2ff inset;
    }

    &.selected {
        img {
            filter: grayscale(1);
        }
    }

    .random {
        color: #cecece;
        text-align: center;
        border: .5rem dashed #cecece;
    }
}

.white-bg {
    background-color: white;
}